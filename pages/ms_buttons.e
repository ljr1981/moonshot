note
	description: "[
		Representation of an effected {MS_BUTTONS}.
		]"

class
	MS_BUTTONS

inherit
	MS_BASE_PAGE
		redefine
			content_setup
		end

feature {NONE} -- Initialization

	navigation_setup
			-- <Precursor>
		do
			do_nothing
		end

	content_setup
			-- <Precursor>
		do
			add_content (jumbotron)
			add_content (buttons_begin)
			add_content (button_style_example)
			add_content (button_style_explained)
			add_content (buttons_page_html)
			add_content (last_word)
		end

	jumbotron: BS_JUMBOTRON
		do
			create Result.make_content_centered ({BS}.bleed_to_edge)

			Result.item.new_hx.set_text_content ("BUTTONS")
			Result.item.last_new_hx.set_h1
			Result.item.add_content (Result.item.last_new_hx)

			Result.item.new_p.set_text_content ("Buttons, buttons, buttons!")
			Result.item.add_content (Result.item.last_new_p)
		end

	buttons_begin: BS_CONTAINER
		do
			Result := standard_container ("bs_button.png",
									"button ancestor",
									"EXAMPLE #1: {BS_BUTTON} Mother of all Buttons",
									"Where all buttons come from",
									buttons_begin_paragraph,
									700, 700)
		end

	button_style_example: BS_CONTAINER
		local
			l_row: BS_ROW
			l_column: BS_COLUMN
			l_well: BS_WELL
		do
			create Result.make
			Result.add_content (create {HTML_TEXT}.make_with_text ("Here are some samples ..."))
			create l_row.make_for_phone (<<2,2,2,2,2,2>>)
			create l_well
			Result.add_content (l_row)

				-- Two forms of link button ...
			create l_column.make_for_phone (2)
			create l_well
			l_well.add_content (create {BS_LINK_BUTTON}.make_with_text ("Link",
											{BS}.btn_style_info, {BS}.btn_size_lg))
			l_column.add_content (l_well)
			l_row.add_content (l_column)

			create l_column.make_for_phone (2)
			create l_well
			l_well.add_content (create {BS_LINK_BUTTON}.make_with_text_and_link ("Home!",
											{BS}.btn_style_info, {BS}.btn_size_lg, "index.html"))
			l_column.add_content (l_well)
			l_row.add_content (l_column)

			create l_column.make_for_phone (2)
			create l_well
			l_well.add_content (create {BS_BUTTON_BUTTON}.make_with_text ("Plain",
											{BS}.btn_style_info, {BS}.btn_size_lg))
			l_column.add_content (l_well)
			l_row.add_content (l_column)

			create l_column.make_for_phone (2)
			create l_well
			l_well.add_content (create {BS_INPUT_BUTTON}.make_with_text ("Input",
											{BS}.btn_style_info, {BS}.btn_size_lg))
			l_column.add_content (l_well)
			l_row.add_content (l_column)

			create l_column.make_for_phone (2)
			create l_well
			l_well.add_content (create {BS_INPUT_BUTTON}.make_submit_with_text ("Submit",
											{BS}.btn_style_info, {BS}.btn_size_lg))
			l_column.add_content (l_well)
			l_row.add_content (l_column)
		end

	button_style_explained: BS_CONTAINER
		do
			Result := standard_container ("button_style_example.png",
									"button style example",
									"EXAMPLE #2: Buttons Do It with Style!",
									"And the code looks like ... ?",
									buttons_style_example_paragraph,
									700, 700)
		end

	buttons_page_html: BS_CONTAINER
		do
			Result := standard_container ("buttons_html.png",
									"this page generated html",
									"EXAMPLE #3: This Generated Page!",
									"And the generated HTML looks like ... ?",
									generate_html_paragraph,
									900, 900)
		end

	last_word: BS_CONTAINER
		local
			l_row: BS_ROW
			l_col: BS_COLUMN
			l_well: BS_WELL
		do
			create Result.make
			create l_row.make_for_phone (<<12>>)
			create l_col.make_for_phone (12)
			create l_well
			l_well.add_content (create {HTML_TEXT}.make_with_text ("This page was generated by Moonshot! Nothing shown here was hand-coded."))
			l_col.add_content (l_well)
			l_row.add_content (l_col)
			Result.add_content (l_row)
		end

feature {NONE} -- Paragraphs

	buttons_begin_paragraph: STRING = "[
All Moonshot buttons descend from {BS_BUTTON}, which provides some basic creation features. From this one button
we get the remaining four basic button types: Link, Button, Input, and Submit.
]"

	buttons_style_example_paragraph: STRING = "[
A closer inspection of the example code shows that each button is given a style of: {BS}.btn_style_info
Each of the valid (i.e. "legal") button styles are represented in the {BS} (i.e. Bootstrap "constants").
The {BS}.[something] reference style is called a "Static Reference", where the compiler will look up the
appropriate value (e.g. {BS}.btn_style_info = "btn-info") and "in-line" it directly into the code text
at compile-time.
]"

	generate_html_paragraph: STRING = "[
As with other pages, this one is completely generated HTML, including the JS and CSS <head> links.
]"

note
	design_intent: "[
		Your_text_goes_here
		]"

end
